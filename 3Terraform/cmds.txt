--For running function:
1.To start console = terraform console
2. join(" ", ["siva","kumar"])
3. max(10,20,30)
4. min(10,20,30)
5. To read file = 
        public_key = file("${path.module}/devops.pub")


--To see Instances = aws ec2 describe-instances --query "Reservations[*].Instances[*].{ID:InstanceId,State:State.Name,Type:InstanceType,AZ:Placement.AvailabilityZone}" --output table
--locals are similar to variable but they also allow expressions and functions
--data sources = you can query the data dynamically from source ie aws

--tfvars = terraform plan -var-file="prod.tfvars"

--Increase tmp space
        1. sudo rm -rf /tmp/*
        2. cd /var/lib/jenkins
        sudo du -sh *
        3.sudo mount -o remount,size=4G /tmp
        4. JAVA_ARGS="-Djava.io.tmpdir=/var/lib/jenkins/tmp"
        5. sudo systemctl restart jenkins

--sonarscanner conf changes = 
        1. Install Sonarqube on a seperate server with t2.medium cpu 
        2. Install SonarScanner on your jenkins server
        3. conf changes = vim /opt/sonar-scanner/conf/ sonar-scanner.properties
        #Configure here general information about the environment, such as SonarQube server connection details for example
        #No information about specific project should appear here

        #----- Default SonarQube server
        sonar.host.url=http://18.206.176.145:9000
        sonar.login=sqa_34f5295ff76d310038d9fc10ce463dc1c0b2095f //This login token you get by creating a token in sonarqube->top-right->myprofile->security->generate token

        #----- Default source code encoding
        #sonar.sourceEncoding=UTF-8

        4. Create sonar_project.properties
--Variables usage in terraform = name = ${var.project_name}-catalogue-${var.env}s