apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels: #These labels are deployment set labels.Every k8s resources have labels
    app: guestbook
    tier: frontend
spec:
  # modify replicas according to your case
  replicas: 3
  selector: #selector should match with template. The selector should match with pod labels
    matchLabels:
      tier: web
      env: prod
  template: #Template is pod labels   
    metadata:
      labels:
        tier: web
        env: prod
    spec:
      containers: 
      - name: nginx
        image: nginx:latest
        ports: 
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata: 
  name: nginx-service
spec:
  type: LoadBalancer #The only difference from clusterip
  selector: #The service attaches to the pod by matching with the labels
    tier: web
    env: prod
  ports:
  - name: name-of-service-port
    protocol: TCP
    port: 80 #This port number belongs to service
    targetPort: nginx-port #This port number belongs to container
---
#Create Ingress and give the above service name
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: web
    annotations:
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/tags: Environment=dev,Project=roboshop
        alb.ingress.kubernetes.io/group.name: joindevops #If you give the group name then all the applications will attach to the same load balancer. If not it will create multiple load balancers 
spec:
  ingressClassName: alb
  rules:
  - host: "web.joindevops.online"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web #Here give the service name
            port:
              number: 80
 