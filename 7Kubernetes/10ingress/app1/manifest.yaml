#Before running the code install the ingress controller like ALB,nginx
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  labels: #These labels are deployment set labels.Every k8s resources have labels
    app: app1
spec:
  # modify replicas according to your case
  replicas: 2
  selector: #selector should match with template. The selector should match with pod labels
    matchLabels:
      app: app1
  template: #Template is pod labels   
    metadata:
      labels:
        app: app1
    spec:
      containers: 
      - name: app1
        image: cryl91/app1
        ports: 
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: app1
spec:
  selector:
    app: app1
  ports:
  - name: name-of-service-port
    protocol: TCP
    port: 80 #This port number belongs to service
    targetPort: 80 #This port number belongs to container
---
#The below is a ingress rule. So the flow is Route53->App LB-> Ingress Rule-> Kubernetes Service->Pods
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: app1
    annotations:
        alb.ingress.kubernetes.io/scheme: internet-facing #You're telling Kubernetes: "Hey, I want this Ingress to be handled by the controller registered with ingressClassName: alb." Create an internet-facing ALB (as opposed to internal-only)
        alb.ingress.kubernetes.io/target-type: ip #Route traffic directly to Pod IPs instead of NodePort (alternative: instance)
        alb.ingress.kubernetes.io/tags: Environment=dev,Project=roboshop
        alb.ingress.kubernetes.io/group.name: joindevops #If you give the group name then all the applications will attach to the same load balancer. If not it will create multiple load balancers. ie Use a shared ALB for multiple Ingress objects (based on group name)
spec:
  ingressClassName: alb
  rules:
  - host: "app1.joindevops.online"
    http:
      paths: 
      - path: / # Represents hostname based routing. For path based routing we give "path: /app1"
        pathType: Prefix
        backend:
          service:
            name: app1
            port:
              number: 80
      # - path: /api #Another Ingress Rule defined
      #   pathType: Prefix
      #   backend:
      #     service:
      #       name: api
      #       port:
      #         number: 80        
 