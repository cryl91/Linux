#Login in to one more container and curl ip/servicename. To get ip = kubectl get services 
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels: 
    env: dev
    app: frontend
spec:
  containers:
  - name: nginx
    image: nginx
    imagePullPolicy: Always #To always pull the latest image
    ports:
    - containerPort: 80
      name: nginx-port
---
apiVersion: v1
kind: Service
metadata: 
  name: nginx-service
spec:
  type: NodePort #The only difference from clusterip
  selector: #The service attaches to the pod by matching with the labels
    env: dev
    app: frontend
  ports:
  - name: name-of-service-port
    protocol: TCP
    port: 80 #This port number belongs to service
    targetPort: nginx-port #This port number belongs to container

# On command line you can create service using = 
# Expose prometheus as nodeport =  kubectl expose service prometheus-server --type=NodePort --target-port=9090 --name=prometheus-server-ext
#  or  kubectl expose service prometheus-kube-prometheus-prometheus \
#   --type=NodePort \
#   --target-port=9090 \
#   --name=prometheus-server-ext
