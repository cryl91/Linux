# 1. Add taint = kubectl taint nodes <node-name> role=first:NoSchedule
# 2. Add tolerations in the Pod YAML

# Tolerations = operator: "Equal"
#   1. Equal(default) = Match key & value(ie the taint’s key and value must match the toleration’s key and value).
#   2. Exists → Match key only, ignore value (ie the pod tolerates the taint if the key exists, regardless of the value).

#To see tainted nodes = Kubectl describe node <nodename> | grep -i "taint" (-i means case-insensitive)
#nodeName: ip-192-168-10-94.ec2.internal = If you use nodename Kubernetes will directly bind the Pod to that node, even if the node is tainted. But without tolerations the kubelet on that node will reject it and hence Pod will stay in Pending (unschedulable due to taint) until tolerations match.
apiVersion: v1
kind: Pod
metadata:
  name: firstnode
spec:
  # nodeName: ip-192-168-10-94.ec2.internal
  tolerations:
  - key: "role" #Double quotes here
    operator: "Equal" #means key/value must match.
    value: "first"
    effect: "NoSchedule" #prevents scheduling unless tolerated.
  containers:
  - name: nginx1
    image: nginx
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: secondnode
spec:
  nodeName: ip-192-168-61-165.ec2.internal
  containers:
  - name: nginx2
    image: nginx
    ports:
    - containerPort: 80 