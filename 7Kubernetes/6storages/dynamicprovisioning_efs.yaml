apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-dynamic-roboshop-sc #You can store another project info by mentioning "efs-dynamic-amazon-sc" name here and using the same base path "roboshop". For each project, aws creates access points in efs.
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: fs-0a7f53f10ba167042
  directoryPerms: "700"
  gidRangeStart: "1000" #Optional
  gidRangeEnd: "2000" #Optional
  basePath: "/roboshop" #Optional
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-dynamic-pvc
spec:
  storageClassName: "efs-dynamic-roboshop-sc"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels: #These labels are deployment set labels.Every k8s resources have labels
    app: guestbook
    tier: frontend
spec:
  # modify replicas according to your case
  replicas: 3
  selector: #selector should match with template. The selector should match with pod labels
    matchLabels:
      tier: frontend
      env: prod
  template: #Template is pod labels   
    metadata:
      labels:
        tier: frontend
        env: prod
    spec:
      containers: 
      - name: nginx
        image: nginx:latest
        ports: 
        - containerPort: 80
          name: nginx-port
        volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: nginx-storage
      volumes:
      - name: nginx-storage
        persistentVolumeClaim:    
          claimName: efs-dynamic-pvc
# ---
# apiVersion: v1
# kind: Service
# metadata: 
#   name: nginx-service
# spec:
#   type: LoadBalancer #The only difference from clusterip
#   selector: #The service attaches to the pod by matching with the labels
#     tier: frontend
#     env: prod
#   ports:
#   - name: name-of-service-port
#     protocol: TCP
#     port: 80 #This port number belongs to service
#     targetPort: nginx-port #This port number belongs to container