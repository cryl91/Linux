apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer
parameters:
  csi.storage.k8s.io/fstype: xfs
  type: io1
  iopsPerGB: "50"
  encrypted: "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-dynamic-pvc
spec:
  storageClassName: "ebs-sc"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels: #These labels are deployment set labels.Every k8s resources have labels
    app: guestbook
    tier: frontend
spec:
  # modify replicas according to your case
  replicas: 3
  selector: #selector should match with template. The selector should match with pod labels
    matchLabels:
      tier: frontend
      env: prod
  template: #Template is pod labels   
    metadata:
      labels:
        tier: frontend
        env: prod
    spec:
      containers: 
      - name: nginx
        image: nginx:latest
        ports: 
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: nginx-storage
      volumes:
      - name: nginx-storage
        persistentVolumeClaim:    
          claimName: ebs-dynamic-pvc
---
apiVersion: v1
kind: Service
metadata: 
  name: nginx-service
spec:
  type: LoadBalancer #The only difference from clusterip
  selector: #The service attaches to the pod by matching with the labels
    tier: frontend
    env: prod
  ports:
  - name: name-of-service-port
    protocol: TCP
    port: 80 #This port number belongs to service
    targetPort: nginx-port #This port number belongs to container