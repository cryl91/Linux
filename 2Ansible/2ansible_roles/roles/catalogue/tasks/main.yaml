#Import common tasks from common folder
#Deployment = 
#1. Create User+ Create mkdir
#2. Download Artifact+ Npm Install
#3. Copy Service file+ Load Data
- name: Install nodejs
  ansible.builtin.import_role:
    name: common
    tasks_from: nodejs #No need to mention the name nodejs.yaml fully

- name: check user exists or not 
  ansible.builtin.command: id roboshop
  register: output # the register variable ie output stores the output of the command
  ignore_errors: true
  
- when: output.rc != 0
  name: Create User roboshop
  ansible.builtin.user:
    name: roboshop
  
- name: check directory exists or not  
  ansible.builtin.stat:
    path: /tmp/app
  register: directory

- name: print the directory stats
  ansible.builtin.debug: 
    msg: "output is {{directory}}"  

- when: directory.stat.exists == False
  name: create /app directory
  ansible.builtin.file:
    path: /tmp/app
    state: directory

- name: download catalogue artifact
  ansible.builtin.get_url:
    url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
    dest: /tmp

- name: extract catalogue artifact
  ansible.builtin.unarchive: 
    src: /tmp/catalogue.zip
    dest: /app
    remote_src: yes 

- name: install dependencies
  ansible.builtin.command: npm install
  args: #Args allows you to move to /app directory and run npm install
    chdir: /app

- name: copy catalogue service
  ansible.builtin.copy:
    src: catalogue.service
    dest: /etc/systemd/system/catalogue.service

- name: Daemon reload
  ansible.builtin.systemd: 
    state: restarted
    daemon_reload: true
    name: catalogue 

- name: Install Mongodb
  ansible.builtin.yum:
    name: mongodb-org-shell
    state: installed 

- name: Load Catalogue Data 
  ansible.builtin.command: mongo --host MONGODB-SERVER-IPADDRESS < /app/schema/catalogue.js

- name: Restarting catalogue
  ansible.builtin.service:
    name: catalogue
    state: restarted
      